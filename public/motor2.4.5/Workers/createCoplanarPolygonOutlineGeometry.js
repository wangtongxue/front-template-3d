define(["./when-7ef6387a","./Check-ed6a1804","./Math-85667bf9","./Ellipsoid-1cbb4ac9","./Transforms-c20c38d0","./RuntimeError-5b606d78","./Cartesian2-73569d25","./WebGLConstants-30fc6f5c","./ComponentDatatype-a863af81","./GeometryAttribute-6b3c7112","./GeometryAttributes-cb18da36","./AttributeCompression-5e3c38a2","./GeometryPipeline-585f444f","./EncodedCartesian3-fbe51c6d","./IndexDatatype-f12d39b5","./IntersectionTests-faaebeeb","./Plane-6ff6c057","./GeometryInstance-ebd8a828","./arrayRemoveDuplicates-9458abce","./EllipsoidTangentPlane-13a4f7fd","./OrientedBoundingBox-565e6407","./CoplanarPolygonGeometryLibrary-a25e2653","./ArcType-2ee8dfbb","./EllipsoidRhumbLine-01425f3c","./PolygonPipeline-5110db34","./PolygonGeometryLibrary-bbb55e41"],(function(e,t,r,n,o,i,a,y,c,l,p,s,d,u,f,m,b,g,h,P,v,G,C,k,L,E){"use strict";function T(e){for(var t=e.length,r=new Float64Array(3*t),n=f.IndexDatatype.createTypedArray(t,2*t),o=0,i=0,a=0;a<t;a++){var y=e[a];r[o++]=y.x,r[o++]=y.y,r[o++]=y.z,n[i++]=a,n[i++]=(a+1)%t}var s=new p.GeometryAttributes({position:new l.GeometryAttribute({componentDatatype:c.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:r})});return new l.Geometry({attributes:s,indices:n,primitiveType:l.PrimitiveType.LINES})}function H(r){var n=(r=e.defaultValue(r,e.defaultValue.EMPTY_OBJECT)).polygonHierarchy;t.Check.defined("options.polygonHierarchy",n),this._polygonHierarchy=n,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=E.PolygonGeometryLibrary.computeHierarchyPackedLength(n)+1}H.fromPositions=function(r){return r=e.defaultValue(r,e.defaultValue.EMPTY_OBJECT),t.Check.defined("options.positions",r.positions),new H({polygonHierarchy:{positions:r.positions}})},H.pack=function(r,n,o){return t.Check.typeOf.object("value",r),t.Check.defined("array",n),o=e.defaultValue(o,0),n[o=E.PolygonGeometryLibrary.packPolygonHierarchy(r._polygonHierarchy,n,o)]=r.packedLength,n};var w={polygonHierarchy:{}};return H.unpack=function(r,n,o){t.Check.defined("array",r),n=e.defaultValue(n,0);var i=E.PolygonGeometryLibrary.unpackPolygonHierarchy(r,n);n=i.startingIndex,delete i.startingIndex;var a=r[n];return e.defined(o)||(o=new H(w)),o._polygonHierarchy=i,o.packedLength=a,o},H.createGeometry=function(e){var t=e._polygonHierarchy,r=t.positions;if(!((r=h.arrayRemoveDuplicates(r,n.Cartesian3.equalsEpsilon,!0)).length<3)&&G.CoplanarPolygonGeometryLibrary.validOutline(r)){var i=E.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(t,!1);if(0!==i.length){for(var a=[],y=0;y<i.length;y++){var c=new g.GeometryInstance({geometry:T(i[y])});a.push(c)}var p=d.GeometryPipeline.combineInstances(a)[0],s=o.BoundingSphere.fromPoints(t.positions);return new l.Geometry({attributes:p.attributes,indices:p.indices,primitiveType:p.primitiveType,boundingSphere:s})}}},function(t,r){return e.defined(r)&&(t=H.unpack(t,r)),t._ellipsoid=n.Ellipsoid.clone(t._ellipsoid),H.createGeometry(t)}}));
//# sourceMappingURL=createCoplanarPolygonOutlineGeometry.js.map
