define(["exports","./when-7ef6387a","./Math-85667bf9","./Ellipsoid-1cbb4ac9","./Transforms-c20c38d0","./PolylineVolumeGeometryLibrary-7075293a","./PolylinePipeline-2458e977"],(function(a,e,r,n,i,t,s){"use strict";var o={},l=new n.Cartesian3,C=new n.Cartesian3,y=new n.Cartesian3,u=new n.Cartesian3,c=[new n.Cartesian3,new n.Cartesian3],d=new n.Cartesian3,p=new n.Cartesian3,m=new n.Cartesian3,g=new n.Cartesian3,h=new n.Cartesian3,f=new n.Cartesian3,w=new n.Cartesian3,z=new n.Cartesian3,x=new n.Cartesian3,v=new n.Cartesian3,P=new i.Quaternion,A=new i.Matrix3;function B(a,e,s,o,y){var u,c=n.Cartesian3.angleBetween(n.Cartesian3.subtract(e,a,l),n.Cartesian3.subtract(s,a,C)),d=o===t.CornerType.BEVELED?1:Math.ceil(c/r.CesiumMath.toRadians(5))+1,p=3*d,m=new Array(p);m[p-3]=s.x,m[p-2]=s.y,m[p-1]=s.z,u=y?i.Matrix3.fromQuaternion(i.Quaternion.fromAxisAngle(n.Cartesian3.negate(a,l),c/d,P),A):i.Matrix3.fromQuaternion(i.Quaternion.fromAxisAngle(a,c/d,P),A);var g=0;e=n.Cartesian3.clone(e,l);for(var h=0;h<d;h++)e=i.Matrix3.multiplyByVector(u,e,e),m[g++]=e.x,m[g++]=e.y,m[g++]=e.z;return m}function E(a,e,r,i){var t=l;return i||(e=n.Cartesian3.negate(e,e)),[(t=n.Cartesian3.add(a,e,t)).x,t.y,t.z,r.x,r.y,r.z]}function S(a,e,r,i){for(var t=new Array(a.length),s=new Array(a.length),o=n.Cartesian3.multiplyByScalar(e,r,l),c=n.Cartesian3.negate(o,C),d=0,p=a.length-1,m=0;m<a.length;m+=3){var g=n.Cartesian3.fromArray(a,m,y),h=n.Cartesian3.add(g,c,u);t[d++]=h.x,t[d++]=h.y,t[d++]=h.z;var f=n.Cartesian3.add(g,o,u);s[p--]=f.z,s[p--]=f.y,s[p--]=f.x}return i.push(t,s),i}o.addAttribute=function(a,r,n,i){var t=r.x,s=r.y,o=r.z;e.defined(n)&&(a[n]=t,a[n+1]=s,a[n+2]=o),e.defined(i)&&(a[i]=o,a[i-1]=s,a[i-2]=t)};var b=new n.Cartesian3,D=new n.Cartesian3;o.computePositions=function(a){var e=a.granularity,i=a.positions,o=a.ellipsoid,C=a.width/2,y=a.cornerType,u=a.saveAttributes,P=d,A=p,M=m,T=g,N=h,L=f,O=w,R=z,V=x,Q=v,U=[],G=u?[]:void 0,I=u?[]:void 0,q=i[0],j=i[1];A=n.Cartesian3.normalize(n.Cartesian3.subtract(j,q,A),A),P=o.geodeticSurfaceNormal(q,P),T=n.Cartesian3.normalize(n.Cartesian3.cross(P,A,T),T),u&&(G.push(T.x,T.y,T.z),I.push(P.x,P.y,P.z)),O=n.Cartesian3.clone(q,O),q=j,M=n.Cartesian3.negate(A,M);var k,F,H=[],J=i.length;for(k=1;k<J-1;k++){P=o.geodeticSurfaceNormal(q,P),j=i[k+1],A=n.Cartesian3.normalize(n.Cartesian3.subtract(j,q,A),A),N=n.Cartesian3.normalize(n.Cartesian3.add(A,M,N),N);var K=n.Cartesian3.multiplyByScalar(P,n.Cartesian3.dot(A,P),b);n.Cartesian3.subtract(A,K,K),n.Cartesian3.normalize(K,K);var W=n.Cartesian3.multiplyByScalar(P,n.Cartesian3.dot(M,P),D);if(n.Cartesian3.subtract(M,W,W),n.Cartesian3.normalize(W,W),!r.CesiumMath.equalsEpsilon(Math.abs(n.Cartesian3.dot(K,W)),1,r.CesiumMath.EPSILON7)){N=n.Cartesian3.cross(N,P,N),N=n.Cartesian3.cross(P,N,N),N=n.Cartesian3.normalize(N,N);var X=C/Math.max(.25,n.Cartesian3.magnitude(n.Cartesian3.cross(N,M,l))),Y=t.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(A,M,q,o);N=n.Cartesian3.multiplyByScalar(N,X,N),Y?(R=n.Cartesian3.add(q,N,R),Q=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,C,Q),Q),V=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,2*C,V),V),c[0]=n.Cartesian3.clone(O,c[0]),c[1]=n.Cartesian3.clone(Q,c[1]),U=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:o}),T,C,U),u&&(G.push(T.x,T.y,T.z),I.push(P.x,P.y,P.z)),L=n.Cartesian3.clone(V,L),T=n.Cartesian3.normalize(n.Cartesian3.cross(P,A,T),T),V=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,2*C,V),V),O=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,C,O),O),y===t.CornerType.ROUNDED||y===t.CornerType.BEVELED?H.push({leftPositions:B(R,L,V,y,Y)}):H.push({leftPositions:E(q,n.Cartesian3.negate(N,N),V,Y)})):(V=n.Cartesian3.add(q,N,V),Q=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,C,Q),Q),Q),R=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,2*C,R),R),R),c[0]=n.Cartesian3.clone(O,c[0]),c[1]=n.Cartesian3.clone(Q,c[1]),U=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:o}),T,C,U),u&&(G.push(T.x,T.y,T.z),I.push(P.x,P.y,P.z)),L=n.Cartesian3.clone(R,L),T=n.Cartesian3.normalize(n.Cartesian3.cross(P,A,T),T),R=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,2*C,R),R),R),O=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,C,O),O),O),y===t.CornerType.ROUNDED||y===t.CornerType.BEVELED?H.push({rightPositions:B(V,L,R,y,Y)}):H.push({rightPositions:E(q,N,R,Y)})),M=n.Cartesian3.negate(A,M)}q=j}return P=o.geodeticSurfaceNormal(q,P),c[0]=n.Cartesian3.clone(O,c[0]),c[1]=n.Cartesian3.clone(q,c[1]),U=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:o}),T,C,U),u&&(G.push(T.x,T.y,T.z),I.push(P.x,P.y,P.z)),y===t.CornerType.ROUNDED&&(F=function(a){var e=d,r=p,i=m,s=a[1];r=n.Cartesian3.fromArray(a[1],s.length-3,r),i=n.Cartesian3.fromArray(a[0],0,i);var o=B(e=n.Cartesian3.midpoint(r,i,e),r,i,t.CornerType.ROUNDED,!1),l=a.length-1,C=a[l-1];return s=a[l],r=n.Cartesian3.fromArray(C,C.length-3,r),i=n.Cartesian3.fromArray(s,0,i),[o,B(e=n.Cartesian3.midpoint(r,i,e),r,i,t.CornerType.ROUNDED,!1)]}(U)),{positions:U,corners:H,lefts:G,normals:I,endPositions:F}},a.CorridorGeometryLibrary=o}));
//# sourceMappingURL=CorridorGeometryLibrary-945a617d.js.map
