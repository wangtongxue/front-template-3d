/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["exports","./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./Matrix4-33464f2b","./Cartesian2-f49a1383","./IntersectionTests-15d018f5","./Plane-84b14a0a"],(function(e,n,t,i,a,r,s,o,c,l,m){"use strict";function d(e,t,i){this.minimum=a.Cartesian3.clone(n.defaultValue(e,a.Cartesian3.ZERO)),this.maximum=a.Cartesian3.clone(n.defaultValue(t,a.Cartesian3.ZERO)),i=n.defined(i)?a.Cartesian3.clone(i):a.Cartesian3.midpoint(this.minimum,this.maximum,new a.Cartesian3),this.center=i}d.fromPoints=function(e,t){if(n.defined(t)||(t=new d),!n.defined(e)||0===e.length)return t.minimum=a.Cartesian3.clone(a.Cartesian3.ZERO,t.minimum),t.maximum=a.Cartesian3.clone(a.Cartesian3.ZERO,t.maximum),t.center=a.Cartesian3.clone(a.Cartesian3.ZERO,t.center),t;for(var i=e[0].x,r=e[0].y,s=e[0].z,o=e[0].x,c=e[0].y,l=e[0].z,m=e.length,u=1;u<m;u++){var f=e[u],h=f.x,C=f.y,p=f.z;i=Math.min(h,i),o=Math.max(h,o),r=Math.min(C,r),c=Math.max(C,c),s=Math.min(p,s),l=Math.max(p,l)}var x=t.minimum;x.x=i,x.y=r,x.z=s;var y=t.maximum;return y.x=o,y.y=c,y.z=l,t.center=a.Cartesian3.midpoint(x,y,t.center),t},d.clone=function(e,t){if(n.defined(e))return n.defined(t)?(t.minimum=a.Cartesian3.clone(e.minimum,t.minimum),t.maximum=a.Cartesian3.clone(e.maximum,t.maximum),t.center=a.Cartesian3.clone(e.center,t.center),t):new d(e.minimum,e.maximum,e.center)},d.equals=function(e,t){return e===t||n.defined(e)&&n.defined(t)&&a.Cartesian3.equals(e.center,t.center)&&a.Cartesian3.equals(e.minimum,t.minimum)&&a.Cartesian3.equals(e.maximum,t.maximum)};var u=new a.Cartesian3;d.intersectPlane=function(e,n){t.Check.defined("box",e),t.Check.defined("plane",n),u=a.Cartesian3.subtract(e.maximum,e.minimum,u);var i=a.Cartesian3.multiplyByScalar(u,.5,u),r=n.normal,o=i.x*Math.abs(r.x)+i.y*Math.abs(r.y)+i.z*Math.abs(r.z),c=a.Cartesian3.dot(e.center,r)+n.distance;return c-o>0?s.Intersect.INSIDE:c+o<0?s.Intersect.OUTSIDE:s.Intersect.INTERSECTING},d.prototype.clone=function(e){return d.clone(this,e)},d.prototype.intersectPlane=function(e){return d.intersectPlane(this,e)},d.prototype.equals=function(e){return d.equals(this,e)};var f=new o.Cartesian4;function h(e,i){if(t.Check.defined("origin",e),e=(i=n.defaultValue(i,r.Ellipsoid.WGS84)).scaleToGeodeticSurface(e),!n.defined(e))throw new t.DeveloperError("origin must not be at the center of the ellipsoid.");var c=s.Transforms.eastNorthUpToFixedFrame(e,i);this._ellipsoid=i,this._origin=e,this._xAxis=a.Cartesian3.fromCartesian4(o.Matrix4.getColumn(c,0,f)),this._yAxis=a.Cartesian3.fromCartesian4(o.Matrix4.getColumn(c,1,f));var l=a.Cartesian3.fromCartesian4(o.Matrix4.getColumn(c,2,f));this._plane=m.Plane.fromPointNormal(e,l)}i.defineProperties(h.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},origin:{get:function(){return this._origin}},plane:{get:function(){return this._plane}},xAxis:{get:function(){return this._xAxis}},yAxis:{get:function(){return this._yAxis}},zAxis:{get:function(){return this._plane.normal}}});var C=new d;h.fromPoints=function(e,n){return t.Check.defined("cartesians",e),new h(d.fromPoints(e,C).center,n)};var p=new l.Ray,x=new a.Cartesian3;h.prototype.projectPointOntoPlane=function(e,i){t.Check.defined("cartesian",e);var r=p;r.origin=e,a.Cartesian3.normalize(e,r.direction);var s=l.IntersectionTests.rayPlane(r,this._plane,x);if(n.defined(s)||(a.Cartesian3.negate(r.direction,r.direction),s=l.IntersectionTests.rayPlane(r,this._plane,x)),n.defined(s)){var o=a.Cartesian3.subtract(s,this._origin,s),m=a.Cartesian3.dot(this._xAxis,o),d=a.Cartesian3.dot(this._yAxis,o);return n.defined(i)?(i.x=m,i.y=d,i):new c.Cartesian2(m,d)}},h.prototype.projectPointsOntoPlane=function(e,i){t.Check.defined("cartesians",e),n.defined(i)||(i=[]);for(var a=0,r=e.length,s=0;s<r;s++){var o=this.projectPointOntoPlane(e[s],i[a]);n.defined(o)&&(i[a]=o,a++)}return i.length=a,i},h.prototype.projectPointToNearestOnPlane=function(e,i){t.Check.defined("cartesian",e),n.defined(i)||(i=new c.Cartesian2);var r=p;r.origin=e,a.Cartesian3.clone(this._plane.normal,r.direction);var s=l.IntersectionTests.rayPlane(r,this._plane,x);n.defined(s)||(a.Cartesian3.negate(r.direction,r.direction),s=l.IntersectionTests.rayPlane(r,this._plane,x));var o=a.Cartesian3.subtract(s,this._origin,s),m=a.Cartesian3.dot(this._xAxis,o),d=a.Cartesian3.dot(this._yAxis,o);return i.x=m,i.y=d,i},h.prototype.projectPointsToNearestOnPlane=function(e,i){t.Check.defined("cartesians",e),n.defined(i)||(i=[]);var a=e.length;i.length=a;for(var r=0;r<a;r++)i[r]=this.projectPointToNearestOnPlane(e[r],i[r]);return i};var y=new a.Cartesian3;h.prototype.projectPointOntoEllipsoid=function(e,i){t.Check.defined("cartesian",e),n.defined(i)||(i=new a.Cartesian3);var r=this._ellipsoid,s=this._origin,o=this._xAxis,c=this._yAxis,l=y;return a.Cartesian3.multiplyByScalar(o,e.x,l),i=a.Cartesian3.add(s,l,i),a.Cartesian3.multiplyByScalar(c,e.y,l),a.Cartesian3.add(i,l,i),r.scaleToGeocentricSurface(i,i),i},h.prototype.projectPointsOntoEllipsoid=function(e,i){t.Check.defined("cartesians",e);var a=e.length;n.defined(i)?i.length=a:i=new Array(a);for(var r=0;r<a;++r)i[r]=this.projectPointOntoEllipsoid(e[r],i[r]);return i},e.AxisAlignedBoundingBox=d,e.EllipsoidTangentPlane=h}));
