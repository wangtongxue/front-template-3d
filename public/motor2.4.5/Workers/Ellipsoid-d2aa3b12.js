/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["exports","./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63"],(function(e,i,a,t,r){"use strict";var n=new r.Cartesian3,o=new r.Cartesian3;function d(e,d,u,s,h){if(!i.defined(e))throw new a.DeveloperError("cartesian is required.");if(!i.defined(d))throw new a.DeveloperError("oneOverRadii is required.");if(!i.defined(u))throw new a.DeveloperError("oneOverRadiiSquared is required.");if(!i.defined(s))throw new a.DeveloperError("centerToleranceSquared is required.");var c=e.x,l=e.y,f=e.z,C=d.x,p=d.y,m=d.z,g=c*c*C*C,y=l*l*p*p,_=f*f*m*m,v=g+y+_,S=Math.sqrt(1/v),q=r.Cartesian3.multiplyByScalar(e,S,n);if(v<s)return isFinite(S)?r.Cartesian3.clone(q,h):void 0;var O=u.x,w=u.y,R=u.z,T=o;T.x=q.x*O*2,T.y=q.y*w*2,T.z=q.z*R*2;var z,M,b,x,k,E,N,A=(1-S)*r.Cartesian3.magnitude(e)/(.5*r.Cartesian3.magnitude(T)),V=0;do{V=(z=g*(k=(M=1/(1+(A-=V)*O))*M)+y*(E=(b=1/(1+A*w))*b)+_*(N=(x=1/(1+A*R))*x)-1)/(-2*(g*(k*M)*O+y*(E*b)*w+_*(N*x)*R))}while(Math.abs(z)>t.CesiumMath.EPSILON12);return i.defined(h)?(h.x=c*M,h.y=l*b,h.z=f*x,h):new r.Cartesian3(c*M,l*b,f*x)}function u(e,a,t){this.longitude=i.defaultValue(e,0),this.latitude=i.defaultValue(a,0),this.height=i.defaultValue(t,0)}u.fromRadians=function(e,t,r,n){return a.Check.typeOf.number("longitude",e),a.Check.typeOf.number("latitude",t),r=i.defaultValue(r,0),i.defined(n)?(n.longitude=e,n.latitude=t,n.height=r,n):new u(e,t,r)},u.fromDegrees=function(e,i,r,n){return a.Check.typeOf.number("longitude",e),a.Check.typeOf.number("latitude",i),e=t.CesiumMath.toRadians(e),i=t.CesiumMath.toRadians(i),u.fromRadians(e,i,r,n)};var s=new r.Cartesian3,h=new r.Cartesian3,c=new r.Cartesian3,l=new r.Cartesian3(1/6378137,1/6378137,1/6356752.314245179),f=new r.Cartesian3(1/40680631590769,1/40680631590769,1/40408299984661.445),C=t.CesiumMath.EPSILON1;function p(e,n,o,d){n=i.defaultValue(n,0),o=i.defaultValue(o,0),d=i.defaultValue(d,0),a.Check.typeOf.number.greaterThanOrEquals("x",n,0),a.Check.typeOf.number.greaterThanOrEquals("y",o,0),a.Check.typeOf.number.greaterThanOrEquals("z",d,0),e._radii=new r.Cartesian3(n,o,d),e._radiiSquared=new r.Cartesian3(n*n,o*o,d*d),e._radiiToTheFourth=new r.Cartesian3(n*n*n*n,o*o*o*o,d*d*d*d),e._oneOverRadii=new r.Cartesian3(0===n?0:1/n,0===o?0:1/o,0===d?0:1/d),e._oneOverRadiiSquared=new r.Cartesian3(0===n?0:1/(n*n),0===o?0:1/(o*o),0===d?0:1/(d*d)),e._minimumRadius=Math.min(n,o,d),e._maximumRadius=Math.max(n,o,d),e._centerToleranceSquared=t.CesiumMath.EPSILON1,0!==e._radiiSquared.z&&(e._squaredXOverSquaredZ=e._radiiSquared.x/e._radiiSquared.z)}function m(e,i,a){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,this._squaredXOverSquaredZ=void 0,p(this,e,i,a)}u.fromCartesian=function(e,a,n){var o=i.defined(a)?a.oneOverRadii:l,p=i.defined(a)?a.oneOverRadiiSquared:f,m=d(e,o,p,i.defined(a)?a._centerToleranceSquared:C,h);if(i.defined(m)){var g=r.Cartesian3.multiplyComponents(m,p,s);g=r.Cartesian3.normalize(g,g);var y=r.Cartesian3.subtract(e,m,c),_=Math.atan2(g.y,g.x),v=Math.asin(g.z),S=t.CesiumMath.sign(r.Cartesian3.dot(y,e))*r.Cartesian3.magnitude(y);return i.defined(n)?(n.longitude=_,n.latitude=v,n.height=S,n):new u(_,v,S)}},u.toCartesian=function(e,i,t){return a.Check.defined("cartographic",e),r.Cartesian3.fromRadians(e.longitude,e.latitude,e.height,i,t)},u.clone=function(e,a){if(i.defined(e))return i.defined(a)?(a.longitude=e.longitude,a.latitude=e.latitude,a.height=e.height,a):new u(e.longitude,e.latitude,e.height)},u.equals=function(e,a){return e===a||i.defined(e)&&i.defined(a)&&e.longitude===a.longitude&&e.latitude===a.latitude&&e.height===a.height},u.equalsEpsilon=function(e,t,r){return a.Check.typeOf.number("epsilon",r),e===t||i.defined(e)&&i.defined(t)&&Math.abs(e.longitude-t.longitude)<=r&&Math.abs(e.latitude-t.latitude)<=r&&Math.abs(e.height-t.height)<=r},u.ZERO=i.freezeObject(new u(0,0,0)),u.prototype.clone=function(e){return u.clone(this,e)},u.prototype.equals=function(e){return u.equals(this,e)},u.prototype.equalsEpsilon=function(e,i){return u.equalsEpsilon(this,e,i)},u.prototype.toString=function(){return"("+this.longitude+", "+this.latitude+", "+this.height+")"},t.defineProperties(m.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}}),m.clone=function(e,a){if(i.defined(e)){var t=e._radii;return i.defined(a)?(r.Cartesian3.clone(t,a._radii),r.Cartesian3.clone(e._radiiSquared,a._radiiSquared),r.Cartesian3.clone(e._radiiToTheFourth,a._radiiToTheFourth),r.Cartesian3.clone(e._oneOverRadii,a._oneOverRadii),r.Cartesian3.clone(e._oneOverRadiiSquared,a._oneOverRadiiSquared),a._minimumRadius=e._minimumRadius,a._maximumRadius=e._maximumRadius,a._centerToleranceSquared=e._centerToleranceSquared,a):new m(t.x,t.y,t.z)}},m.fromCartesian3=function(e,a){return i.defined(a)||(a=new m),i.defined(e)?(p(a,e.x,e.y,e.z),a):a},m.WGS84=i.freezeObject(new m(6378137,6378137,6356752.314245179)),m.CGCS2000=i.freezeObject(new m(6378137,6378137,6356752.31414)),m.UNIT_SPHERE=i.freezeObject(new m(1,1,1)),m.MOON=i.freezeObject(new m(t.CesiumMath.LUNAR_RADIUS,t.CesiumMath.LUNAR_RADIUS,t.CesiumMath.LUNAR_RADIUS)),m.prototype.clone=function(e){return m.clone(this,e)},m.packedLength=r.Cartesian3.packedLength,m.pack=function(e,t,n){return a.Check.typeOf.object("value",e),a.Check.defined("array",t),n=i.defaultValue(n,0),r.Cartesian3.pack(e._radii,t,n),t},m.unpack=function(e,t,n){a.Check.defined("array",e),t=i.defaultValue(t,0);var o=r.Cartesian3.unpack(e,t);return m.fromCartesian3(o,n)},m.prototype.geocentricSurfaceNormal=r.Cartesian3.normalize,m.prototype.geodeticSurfaceNormalCartographic=function(e,t){a.Check.typeOf.object("cartographic",e);var n=e.longitude,o=e.latitude,d=Math.cos(o),u=d*Math.cos(n),s=d*Math.sin(n),h=Math.sin(o);return i.defined(t)||(t=new r.Cartesian3),t.x=u,t.y=s,t.z=h,r.Cartesian3.normalize(t,t)},m.prototype.geodeticSurfaceNormal=function(e,a){return i.defined(a)||(a=new r.Cartesian3),a=r.Cartesian3.multiplyComponents(e,this._oneOverRadiiSquared,a),r.Cartesian3.normalize(a,a)};var g=new r.Cartesian3,y=new r.Cartesian3;m.prototype.cartographicToCartesian=function(e,a){var t=g,n=y;this.geodeticSurfaceNormalCartographic(e,t),r.Cartesian3.multiplyComponents(this._radiiSquared,t,n);var o=Math.sqrt(r.Cartesian3.dot(t,n));return r.Cartesian3.divideByScalar(n,o,n),r.Cartesian3.multiplyByScalar(t,e.height,t),i.defined(a)||(a=new r.Cartesian3),r.Cartesian3.add(n,t,a)},m.prototype.cartographicArrayToCartesianArray=function(e,t){a.Check.defined("cartographics",e);var r=e.length;i.defined(t)?t.length=r:t=new Array(r);for(var n=0;n<r;n++)t[n]=this.cartographicToCartesian(e[n],t[n]);return t};var _=new r.Cartesian3,v=new r.Cartesian3,S=new r.Cartesian3;m.prototype.cartesianToCartographic=function(e,a){var n=this.scaleToGeodeticSurface(e,v);if(i.defined(n)){var o=this.geodeticSurfaceNormal(n,_),d=r.Cartesian3.subtract(e,n,S),s=Math.atan2(o.y,o.x),h=Math.asin(o.z),c=t.CesiumMath.sign(r.Cartesian3.dot(d,e))*r.Cartesian3.magnitude(d);return i.defined(a)?(a.longitude=s,a.latitude=h,a.height=c,a):new u(s,h,c)}},m.prototype.cartesianArrayToCartographicArray=function(e,t){a.Check.defined("cartesians",e);var r=e.length;i.defined(t)?t.length=r:t=new Array(r);for(var n=0;n<r;++n)t[n]=this.cartesianToCartographic(e[n],t[n]);return t},m.prototype.scaleToGeodeticSurface=function(e,i){return d(e,this._oneOverRadii,this._oneOverRadiiSquared,this._centerToleranceSquared,i)},m.prototype.scaleToGeocentricSurface=function(e,t){a.Check.typeOf.object("cartesian",e),i.defined(t)||(t=new r.Cartesian3);var n=e.x,o=e.y,d=e.z,u=this._oneOverRadiiSquared,s=1/Math.sqrt(n*n*u.x+o*o*u.y+d*d*u.z);return r.Cartesian3.multiplyByScalar(e,s,t)},m.prototype.transformPositionToScaledSpace=function(e,a){return i.defined(a)||(a=new r.Cartesian3),r.Cartesian3.multiplyComponents(e,this._oneOverRadii,a)},m.prototype.transformPositionFromScaledSpace=function(e,a){return i.defined(a)||(a=new r.Cartesian3),r.Cartesian3.multiplyComponents(e,this._radii,a)},m.prototype.equals=function(e){return this===e||i.defined(e)&&r.Cartesian3.equals(this._radii,e._radii)},m.prototype.toString=function(){return this._radii.toString()},m.prototype.getSurfaceNormalIntersectionWithZAxis=function(e,n,o){if(a.Check.typeOf.object("position",e),!t.CesiumMath.equalsEpsilon(this._radii.x,this._radii.y,t.CesiumMath.EPSILON15))throw new a.DeveloperError("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");a.Check.typeOf.number.greaterThan("Ellipsoid.radii.z",this._radii.z,0),n=i.defaultValue(n,0);var d=this._squaredXOverSquaredZ;if(i.defined(o)||(o=new r.Cartesian3),o.x=0,o.y=0,o.z=e.z*(1-d),!(Math.abs(o.z)>=this._radii.z-n))return o},e.Cartographic=u,e.Ellipsoid=m}));
