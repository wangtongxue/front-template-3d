{"version":3,"file":"createPlaneOutlineGeometry.js","sources":["../../../../Source/Core/PlaneOutlineGeometry.js","../../../../Source/WorkersES6/createPlaneOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defined from './defined.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\n\r\n    /**\r\n     * Describes geometry representing the outline of a plane centered at the origin, with a unit width and length.\r\n     *\r\n     * @alias PlaneOutlineGeometry\r\n     * @constructor\r\n     *\r\n     */\r\n    function PlaneOutlineGeometry() {\r\n        this._workerName = 'createPlaneOutlineGeometry';\r\n    }\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    PlaneOutlineGeometry.packedLength = 0;\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {PlaneOutlineGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    PlaneOutlineGeometry.pack = function(value, array) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {PlaneOutlineGeometry} [result] The object into which to store the result.\r\n     * @returns {PlaneOutlineGeometry} The modified result parameter or a new PlaneOutlineGeometry instance if one was not provided.\r\n     */\r\n    PlaneOutlineGeometry.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        if (!defined(result)) {\r\n            return new PlaneOutlineGeometry();\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    var min = new Cartesian3(-0.5, -0.5, 0.0);\r\n    var max = new Cartesian3( 0.5,  0.5, 0.0);\r\n\r\n    /**\r\n     * Computes the geometric representation of an outline of a plane, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    PlaneOutlineGeometry.createGeometry = function() {\r\n        var attributes = new GeometryAttributes();\r\n        var indices = new Uint16Array(4 * 2);\r\n        var positions = new Float64Array(4 * 3);\r\n\r\n        positions[0] = min.x;\r\n        positions[1] = min.y;\r\n        positions[2] = min.z;\r\n        positions[3] = max.x;\r\n        positions[4] = min.y;\r\n        positions[5] = min.z;\r\n        positions[6] = max.x;\r\n        positions[7] = max.y;\r\n        positions[8] = min.z;\r\n        positions[9] = min.x;\r\n        positions[10] = max.y;\r\n        positions[11] = min.z;\r\n\r\n        attributes.position = new GeometryAttribute({\r\n            componentDatatype : ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute : 3,\r\n            values : positions\r\n        });\r\n\r\n        indices[0] = 0;\r\n        indices[1] = 1;\r\n        indices[2] = 1;\r\n        indices[3] = 2;\r\n        indices[4] = 2;\r\n        indices[5] = 3;\r\n        indices[6] = 3;\r\n        indices[7] = 0;\r\n\r\n        return new Geometry({\r\n            attributes : attributes,\r\n            indices : indices,\r\n            primitiveType : PrimitiveType.LINES,\r\n            boundingSphere : new BoundingSphere(Cartesian3.ZERO, Math.sqrt(2.0))\r\n        });\r\n    };\r\nexport default PlaneOutlineGeometry;\r\n","import defined from '../Core/defined.js';\r\nimport PlaneOutlineGeometry from '../Core/PlaneOutlineGeometry.js';\r\n\r\n    function createPlaneOutlineGeometry(planeGeometry, offset) {\r\n        if (defined(offset)) {\r\n            planeGeometry = PlaneOutlineGeometry.unpack(planeGeometry, offset);\r\n        }\r\n        return PlaneOutlineGeometry.createGeometry(planeGeometry);\r\n    }\r\nexport default createPlaneOutlineGeometry;\r\n"],"names":["PlaneOutlineGeometry","this","_workerName","packedLength","pack","value","array","Check","defined","unpack","startingIndex","result","min","Cartesian3","max","createGeometry","attributes","GeometryAttributes","indices","Uint16Array","positions","Float64Array","x","y","z","position","GeometryAttribute","componentDatatype","ComponentDatatype","DOUBLE","componentsPerAttribute","values","Geometry","primitiveType","PrimitiveType","LINES","boundingSphere","BoundingSphere","ZERO","Math","sqrt","planeGeometry","offset"],"mappings":"yUAiBI,SAASA,IACLC,KAAKC,YAAc,6BAOvBF,EAAqBG,aAAe,EAUpCH,EAAqBI,KAAO,SAASC,EAAOC,GAMxC,OAJAC,QAAMC,QAAQ,QAASH,GACvBE,QAAMC,QAAQ,QAASF,GAGhBA,GAWXN,EAAqBS,OAAS,SAASH,EAAOI,EAAeC,GAKzD,OAHAJ,QAAMC,QAAQ,QAASF,GAGlBE,UAAQG,GAINA,EAHI,IAAIX,GAMnB,IAAIY,EAAM,IAAIC,cAAY,IAAM,GAAK,GACjCC,EAAM,IAAID,aAAY,GAAM,GAAK,UAOrCb,EAAqBe,eAAiB,WAClC,IAAIC,EAAa,IAAIC,qBACjBC,EAAU,IAAIC,YAAY,GAC1BC,EAAY,IAAIC,aAAa,IA8BjC,OA5BAD,EAAU,GAAKR,EAAIU,EACnBF,EAAU,GAAKR,EAAIW,EACnBH,EAAU,GAAKR,EAAIY,EACnBJ,EAAU,GAAKN,EAAIQ,EACnBF,EAAU,GAAKR,EAAIW,EACnBH,EAAU,GAAKR,EAAIY,EACnBJ,EAAU,GAAKN,EAAIQ,EACnBF,EAAU,GAAKN,EAAIS,EACnBH,EAAU,GAAKR,EAAIY,EACnBJ,EAAU,GAAKR,EAAIU,EACnBF,EAAU,IAAMN,EAAIS,EACpBH,EAAU,IAAMR,EAAIY,EAEpBR,EAAWS,SAAW,IAAIC,oBAAkB,CACxCC,kBAAoBC,oBAAkBC,OACtCC,uBAAyB,EACzBC,OAASX,IAGbF,EAAQ,GAAK,EACbA,EAAQ,GAAK,EACbA,EAAQ,GAAK,EACbA,EAAQ,GAAK,EACbA,EAAQ,GAAK,EACbA,EAAQ,GAAK,EACbA,EAAQ,GAAK,EACbA,EAAQ,GAAK,EAEN,IAAIc,WAAS,CAChBhB,WAAaA,EACbE,QAAUA,EACVe,cAAgBC,gBAAcC,MAC9BC,eAAiB,IAAIC,iBAAexB,aAAWyB,KAAMC,KAAKC,KAAK,OC1GvE,SAAoCC,EAAeC,GAI/C,OAHIlC,UAAQkC,KACRD,EAAgBzC,EAAqBS,OAAOgC,EAAeC,IAExD1C,EAAqBe,eAAe0B"}