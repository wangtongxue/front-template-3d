define(["./when-7ef6387a","./Check-ed6a1804","./Math-85667bf9","./Ellipsoid-1cbb4ac9","./Transforms-c20c38d0","./RuntimeError-5b606d78","./Cartesian2-73569d25","./WebGLConstants-30fc6f5c","./ComponentDatatype-a863af81","./GeometryAttribute-6b3c7112","./GeometryAttributes-cb18da36","./IndexDatatype-f12d39b5","./IntersectionTests-faaebeeb","./Plane-6ff6c057","./GeometryOffsetAttribute-5cfc2755","./VertexFormat-d75df48f","./arrayRemoveDuplicates-9458abce","./EllipsoidTangentPlane-13a4f7fd","./EllipsoidRhumbLine-01425f3c","./PolygonPipeline-5110db34","./PolylineVolumeGeometryLibrary-7075293a","./EllipsoidGeodesic-2bb1f4ee","./PolylinePipeline-2458e977","./CorridorGeometryLibrary-945a617d"],(function(t,e,r,a,i,o,n,s,l,d,u,m,f,y,c,p,h,g,C,b,v,A,_,w){"use strict";var T=new a.Cartesian3,G=new a.Cartesian3,E=new a.Cartesian3,V=new a.Cartesian3,F=new a.Cartesian3,L=new a.Cartesian3,P=new a.Cartesian3,x=new a.Cartesian3;function N(t,e){for(var r=0;r<t.length;r++)t[r]=e.scaleToGeodeticSurface(t[r],t[r]);return t}function D(t,e,r,i,o,n){var s=t.normals,l=t.tangents,d=t.bitangents,u=a.Cartesian3.normalize(a.Cartesian3.cross(r,e,P),P);n.normal&&w.CorridorGeometryLibrary.addAttribute(s,e,i,o),n.tangent&&w.CorridorGeometryLibrary.addAttribute(l,u,i,o),n.bitangent&&w.CorridorGeometryLibrary.addAttribute(d,r,i,o)}function M(e,i,o){var n,s,f,y=e.positions,c=e.corners,p=e.endPositions,h=e.lefts,g=e.normals,C=new u.GeometryAttributes,b=0,v=0,A=0;for(s=0;s<y.length;s+=2)b+=f=y[s].length-3,A+=2*f,v+=y[s+1].length-3;for(b+=3,v+=3,s=0;s<c.length;s++){n=c[s];var _=c[s].leftPositions;t.defined(_)?(b+=f=_.length,A+=f):(v+=f=c[s].rightPositions.length,A+=f)}var F,N=t.defined(p);N&&(b+=F=p[0].length-3,v+=F,A+=6*(F/=3));var M,O,I,k,S,R,H=b+v,z=new Float64Array(H),U={normals:i.normal?new Float32Array(H):void 0,tangents:i.tangent?new Float32Array(H):void 0,bitangents:i.bitangent?new Float32Array(H):void 0},B=0,Y=H-1,W=T,q=G,J=F/2,j=m.IndexDatatype.createTypedArray(H/3,A),K=0;if(N){R=E,S=V;var Q=p[0];for(W=a.Cartesian3.fromArray(g,0,W),q=a.Cartesian3.fromArray(h,0,q),s=0;s<J;s++)R=a.Cartesian3.fromArray(Q,3*(J-1-s),R),S=a.Cartesian3.fromArray(Q,3*(J+s),S),w.CorridorGeometryLibrary.addAttribute(z,S,B),w.CorridorGeometryLibrary.addAttribute(z,R,void 0,Y),D(U,W,q,B,Y,i),k=(O=B/3)+1,I=(M=(Y-2)/3)-1,j[K++]=M,j[K++]=O,j[K++]=I,j[K++]=I,j[K++]=O,j[K++]=k,B+=3,Y-=3}var X,Z,$=0,tt=0,et=y[$++],rt=y[$++];for(z.set(et,B),z.set(rt,Y-rt.length+1),q=a.Cartesian3.fromArray(h,tt,q),f=rt.length-3,s=0;s<f;s+=3)X=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,s,P),P),Z=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(rt,f-s,x),x),D(U,W=a.Cartesian3.normalize(a.Cartesian3.add(X,Z,W),W),q,B,Y,i),k=(O=B/3)+1,I=(M=(Y-2)/3)-1,j[K++]=M,j[K++]=O,j[K++]=I,j[K++]=I,j[K++]=O,j[K++]=k,B+=3,Y-=3;for(X=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,f,P),P),Z=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(rt,f,x),x),W=a.Cartesian3.normalize(a.Cartesian3.add(X,Z,W),W),tt+=3,s=0;s<c.length;s++){var at,it,ot,nt=(n=c[s]).leftPositions,st=n.rightPositions,lt=L,dt=E,ut=V;if(W=a.Cartesian3.fromArray(g,tt,W),t.defined(nt)){for(D(U,W,q,void 0,Y,i),Y-=3,it=k,ot=I,at=0;at<nt.length/3;at++)lt=a.Cartesian3.fromArray(nt,3*at,lt),j[K++]=it,j[K++]=ot-at-1,j[K++]=ot-at,w.CorridorGeometryLibrary.addAttribute(z,lt,void 0,Y),dt=a.Cartesian3.fromArray(z,3*(ot-at-1),dt),ut=a.Cartesian3.fromArray(z,3*it,ut),D(U,W,q=a.Cartesian3.normalize(a.Cartesian3.subtract(dt,ut,q),q),void 0,Y,i),Y-=3;lt=a.Cartesian3.fromArray(z,3*it,lt),dt=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*ot,dt),lt,dt),ut=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*(ot-at),ut),lt,ut),D(U,W,q=a.Cartesian3.normalize(a.Cartesian3.add(dt,ut,q),q),B,void 0,i),B+=3}else{for(D(U,W,q,B,void 0,i),B+=3,it=I,ot=k,at=0;at<st.length/3;at++)lt=a.Cartesian3.fromArray(st,3*at,lt),j[K++]=it,j[K++]=ot+at,j[K++]=ot+at+1,w.CorridorGeometryLibrary.addAttribute(z,lt,B),dt=a.Cartesian3.fromArray(z,3*it,dt),ut=a.Cartesian3.fromArray(z,3*(ot+at),ut),D(U,W,q=a.Cartesian3.normalize(a.Cartesian3.subtract(dt,ut,q),q),B,void 0,i),B+=3;lt=a.Cartesian3.fromArray(z,3*it,lt),dt=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*(ot+at),dt),lt,dt),ut=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*ot,ut),lt,ut),D(U,W,q=a.Cartesian3.normalize(a.Cartesian3.negate(a.Cartesian3.add(ut,dt,q),q),q),void 0,Y,i),Y-=3}for(et=y[$++],rt=y[$++],et.splice(0,3),rt.splice(rt.length-3,3),z.set(et,B),z.set(rt,Y-rt.length+1),f=rt.length-3,tt+=3,q=a.Cartesian3.fromArray(h,tt,q),at=0;at<rt.length;at+=3)X=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,at,P),P),Z=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(rt,f-at,x),x),D(U,W=a.Cartesian3.normalize(a.Cartesian3.add(X,Z,W),W),q,B,Y,i),O=(k=B/3)-1,M=(I=(Y-2)/3)+1,j[K++]=M,j[K++]=O,j[K++]=I,j[K++]=I,j[K++]=O,j[K++]=k,B+=3,Y-=3;B-=3,Y+=3}if(D(U,W=a.Cartesian3.fromArray(g,g.length-3,W),q,B,Y,i),N){B+=3,Y-=3,R=E,S=V;var mt=p[1];for(s=0;s<J;s++)R=a.Cartesian3.fromArray(mt,3*(F-s-1),R),S=a.Cartesian3.fromArray(mt,3*s,S),w.CorridorGeometryLibrary.addAttribute(z,R,void 0,Y),w.CorridorGeometryLibrary.addAttribute(z,S,B),D(U,W,q,B,Y,i),O=(k=B/3)-1,M=(I=(Y-2)/3)+1,j[K++]=M,j[K++]=O,j[K++]=I,j[K++]=I,j[K++]=O,j[K++]=k,B+=3,Y-=3}if(C.position=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:z}),i.st){var ft,yt,ct=new Float32Array(H/3*2),pt=0;if(N){b/=3,v/=3;var ht,gt=Math.PI/(F+1);yt=1/(b-F+1),ft=1/(v-F+1);var Ct=F/2;for(s=Ct+1;s<F+1;s++)ht=r.CesiumMath.PI_OVER_TWO+gt*s,ct[pt++]=ft*(1+Math.cos(ht)),ct[pt++]=.5*(1+Math.sin(ht));for(s=1;s<v-F+1;s++)ct[pt++]=s*ft,ct[pt++]=0;for(s=F;s>Ct;s--)ht=r.CesiumMath.PI_OVER_TWO-s*gt,ct[pt++]=1-ft*(1+Math.cos(ht)),ct[pt++]=.5*(1+Math.sin(ht));for(s=Ct;s>0;s--)ht=r.CesiumMath.PI_OVER_TWO-gt*s,ct[pt++]=1-yt*(1+Math.cos(ht)),ct[pt++]=.5*(1+Math.sin(ht));for(s=b-F;s>0;s--)ct[pt++]=s*yt,ct[pt++]=1;for(s=1;s<Ct+1;s++)ht=r.CesiumMath.PI_OVER_TWO+gt*s,ct[pt++]=yt*(1+Math.cos(ht)),ct[pt++]=.5*(1+Math.sin(ht))}else{for(yt=1/((b/=3)-1),ft=1/((v/=3)-1),s=0;s<v;s++)ct[pt++]=s*ft,ct[pt++]=0;for(s=b;s>0;s--)ct[pt++]=(s-1)*yt,ct[pt++]=1}C.st=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:ct})}return i.normal&&(C.normal=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:U.normals})),i.tangent&&(C.tangent=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:U.tangents})),i.bitangent&&(C.bitangent=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:U.bitangents})),{attributes:C,indices:j}}function O(t,e,r){r[e++]=t[0],r[e++]=t[1],r[e++]=t[2];for(var a=3;a<t.length;a+=3){var i=t[a],o=t[a+1],n=t[a+2];r[e++]=i,r[e++]=o,r[e++]=n,r[e++]=i,r[e++]=o,r[e++]=n}return r[e++]=t[0],r[e++]=t[1],r[e++]=t[2],r}function I(e,r){var i=new p.VertexFormat({position:r.position,normal:r.normal||r.bitangent||e.shadowVolume,tangent:r.tangent,bitangent:r.normal||r.bitangent,st:r.st}),o=e.ellipsoid,n=M(w.CorridorGeometryLibrary.computePositions(e),i,o),s=e.height,u=e.extrudedHeight,f=n.attributes,y=n.indices,h=f.position.values,g=h.length,C=new Float64Array(6*g),v=new Float64Array(g);v.set(h);var A,_=new Float64Array(4*g);_=O(h=b.PolygonPipeline.scaleToGeodeticHeight(h,s,o),0,_),_=O(v=b.PolygonPipeline.scaleToGeodeticHeight(v,u,o),2*g,_),C.set(h),C.set(v,g),C.set(_,2*g),f.position.values=C,f=function(t,e){if(!(e.normal||e.tangent||e.bitangent||e.st))return t;var r,i,o=t.position.values;(e.normal||e.bitangent)&&(r=t.normal.values,i=t.bitangent.values);var n,s=t.position.values.length/18,l=3*s,d=2*s,u=2*l;if(e.normal||e.bitangent||e.tangent){var m=e.normal?new Float32Array(6*l):void 0,f=e.tangent?new Float32Array(6*l):void 0,y=e.bitangent?new Float32Array(6*l):void 0,c=T,p=G,h=E,g=V,C=F,b=L,v=u;for(n=0;n<l;n+=3){var A=v+u;c=a.Cartesian3.fromArray(o,n,c),p=a.Cartesian3.fromArray(o,n+l,p),h=a.Cartesian3.fromArray(o,(n+3)%l,h),p=a.Cartesian3.subtract(p,c,p),h=a.Cartesian3.subtract(h,c,h),g=a.Cartesian3.normalize(a.Cartesian3.cross(p,h,g),g),e.normal&&(w.CorridorGeometryLibrary.addAttribute(m,g,A),w.CorridorGeometryLibrary.addAttribute(m,g,A+3),w.CorridorGeometryLibrary.addAttribute(m,g,v),w.CorridorGeometryLibrary.addAttribute(m,g,v+3)),(e.tangent||e.bitangent)&&(b=a.Cartesian3.fromArray(r,n,b),e.bitangent&&(w.CorridorGeometryLibrary.addAttribute(y,b,A),w.CorridorGeometryLibrary.addAttribute(y,b,A+3),w.CorridorGeometryLibrary.addAttribute(y,b,v),w.CorridorGeometryLibrary.addAttribute(y,b,v+3)),e.tangent&&(C=a.Cartesian3.normalize(a.Cartesian3.cross(b,g,C),C),w.CorridorGeometryLibrary.addAttribute(f,C,A),w.CorridorGeometryLibrary.addAttribute(f,C,A+3),w.CorridorGeometryLibrary.addAttribute(f,C,v),w.CorridorGeometryLibrary.addAttribute(f,C,v+3))),v+=6}if(e.normal){for(m.set(r),n=0;n<l;n+=3)m[n+l]=-r[n],m[n+l+1]=-r[n+1],m[n+l+2]=-r[n+2];t.normal.values=m}else t.normal=void 0;if(e.bitangent?(y.set(i),y.set(i,l),t.bitangent.values=y):t.bitangent=void 0,e.tangent){var _=t.tangent.values;f.set(_),f.set(_,l),t.tangent.values=f}}if(e.st){var P=t.st.values,x=new Float32Array(6*d);x.set(P),x.set(P,d);for(var N=2*d,D=0;D<2;D++){for(x[N++]=P[0],x[N++]=P[1],n=2;n<d;n+=2){var M=P[n],O=P[n+1];x[N++]=M,x[N++]=O,x[N++]=M,x[N++]=O}x[N++]=P[0],x[N++]=P[1]}t.st.values=x}return t}(f,r);var P=g/3;if(e.shadowVolume){var x=f.normal.values;g=x.length;var N=new Float32Array(6*g);for(A=0;A<g;A++)x[A]=-x[A];N.set(x,g),N=O(x,4*g,N),f.extrudeDirection=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:N}),r.normal||(f.normal=void 0)}if(t.defined(e.offsetAttribute)){var D=new Uint8Array(6*P);if(e.offsetAttribute===c.GeometryOffsetAttribute.TOP)D=c.arrayFill(D,1,0,P),D=c.arrayFill(D,1,2*P,4*P);else{var I=e.offsetAttribute===c.GeometryOffsetAttribute.NONE?0:1;D=c.arrayFill(D,I)}f.applyOffset=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:D})}var k=y.length,S=P+P,R=m.IndexDatatype.createTypedArray(C.length/3,2*k+3*S);R.set(y);var H,z,U,B,Y=k;for(A=0;A<k;A+=3){var W=y[A],q=y[A+1],J=y[A+2];R[Y++]=J+P,R[Y++]=q+P,R[Y++]=W+P}for(A=0;A<S;A+=2)U=(H=A+S)+1,B=(z=H+S)+1,R[Y++]=H,R[Y++]=z,R[Y++]=U,R[Y++]=U,R[Y++]=z,R[Y++]=B;return{attributes:f,indices:R}}var k=new a.Cartesian3,S=new a.Cartesian3,R=new a.Cartographic;function H(t,e,r,i,o,n){var s=a.Cartesian3.subtract(e,t,k);a.Cartesian3.normalize(s,s);var l=r.geodeticSurfaceNormal(t,S),d=a.Cartesian3.cross(s,l,k);a.Cartesian3.multiplyByScalar(d,i,d);var u=o.latitude,m=o.longitude,f=n.latitude,y=n.longitude;a.Cartesian3.add(t,d,S),r.cartesianToCartographic(S,R);var c=R.latitude,p=R.longitude;u=Math.min(u,c),m=Math.min(m,p),f=Math.max(f,c),y=Math.max(y,p),a.Cartesian3.subtract(t,d,S),r.cartesianToCartographic(S,R),c=R.latitude,p=R.longitude,u=Math.min(u,c),m=Math.min(m,p),f=Math.max(f,c),y=Math.max(y,p),o.latitude=u,o.longitude=m,n.latitude=f,n.longitude=y}var z=new a.Cartesian3,U=new a.Cartesian3,B=new a.Cartographic,Y=new a.Cartographic;function W(e,r,i,o,s){e=N(e,r);var l=h.arrayRemoveDuplicates(e,a.Cartesian3.equalsEpsilon),d=l.length;if(d<2||i<=0)return new n.Rectangle;var u,m,f=.5*i;if(B.latitude=Number.POSITIVE_INFINITY,B.longitude=Number.POSITIVE_INFINITY,Y.latitude=Number.NEGATIVE_INFINITY,Y.longitude=Number.NEGATIVE_INFINITY,o===v.CornerType.ROUNDED){var y=l[0];a.Cartesian3.subtract(y,l[1],z),a.Cartesian3.normalize(z,z),a.Cartesian3.multiplyByScalar(z,f,z),a.Cartesian3.add(y,z,U),r.cartesianToCartographic(U,R),u=R.latitude,m=R.longitude,B.latitude=Math.min(B.latitude,u),B.longitude=Math.min(B.longitude,m),Y.latitude=Math.max(Y.latitude,u),Y.longitude=Math.max(Y.longitude,m)}for(var c=0;c<d-1;++c)H(l[c],l[c+1],r,f,B,Y);var p=l[d-1];a.Cartesian3.subtract(p,l[d-2],z),a.Cartesian3.normalize(z,z),a.Cartesian3.multiplyByScalar(z,f,z),a.Cartesian3.add(p,z,U),H(p,U,r,f,B,Y),o===v.CornerType.ROUNDED&&(r.cartesianToCartographic(U,R),u=R.latitude,m=R.longitude,B.latitude=Math.min(B.latitude,u),B.longitude=Math.min(B.longitude,m),Y.latitude=Math.max(Y.latitude,u),Y.longitude=Math.max(Y.longitude,m));var g=t.defined(s)?s:new n.Rectangle;return g.north=Y.latitude,g.south=B.latitude,g.east=Y.longitude,g.west=B.longitude,g}function q(i){var o=(i=t.defaultValue(i,t.defaultValue.EMPTY_OBJECT)).positions,n=i.width;e.Check.defined("options.positions",o),e.Check.defined("options.width",n);var s=t.defaultValue(i.height,0),l=t.defaultValue(i.extrudedHeight,s);this._positions=o,this._ellipsoid=a.Ellipsoid.clone(t.defaultValue(i.ellipsoid,a.Ellipsoid.WGS84)),this._vertexFormat=p.VertexFormat.clone(t.defaultValue(i.vertexFormat,p.VertexFormat.DEFAULT)),this._width=n,this._height=Math.max(s,l),this._extrudedHeight=Math.min(s,l),this._cornerType=t.defaultValue(i.cornerType,v.CornerType.ROUNDED),this._granularity=t.defaultValue(i.granularity,r.CesiumMath.RADIANS_PER_DEGREE),this._shadowVolume=t.defaultValue(i.shadowVolume,!1),this._workerName="createCorridorGeometry",this._offsetAttribute=i.offsetAttribute,this._rectangle=void 0,this.packedLength=1+o.length*a.Cartesian3.packedLength+a.Ellipsoid.packedLength+p.VertexFormat.packedLength+7}q.pack=function(r,i,o){e.Check.defined("value",r),e.Check.defined("array",i),o=t.defaultValue(o,0);var n=r._positions,s=n.length;i[o++]=s;for(var l=0;l<s;++l,o+=a.Cartesian3.packedLength)a.Cartesian3.pack(n[l],i,o);return a.Ellipsoid.pack(r._ellipsoid,i,o),o+=a.Ellipsoid.packedLength,p.VertexFormat.pack(r._vertexFormat,i,o),o+=p.VertexFormat.packedLength,i[o++]=r._width,i[o++]=r._height,i[o++]=r._extrudedHeight,i[o++]=r._cornerType,i[o++]=r._granularity,i[o++]=r._shadowVolume?1:0,i[o]=t.defaultValue(r._offsetAttribute,-1),i};var J=a.Ellipsoid.clone(a.Ellipsoid.UNIT_SPHERE),j=new p.VertexFormat,K={positions:void 0,ellipsoid:J,vertexFormat:j,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,shadowVolume:void 0,offsetAttribute:void 0};return q.unpack=function(r,i,o){e.Check.defined("array",r),i=t.defaultValue(i,0);for(var n=r[i++],s=new Array(n),l=0;l<n;++l,i+=a.Cartesian3.packedLength)s[l]=a.Cartesian3.unpack(r,i);var d=a.Ellipsoid.unpack(r,i,J);i+=a.Ellipsoid.packedLength;var u=p.VertexFormat.unpack(r,i,j);i+=p.VertexFormat.packedLength;var m=r[i++],f=r[i++],y=r[i++],c=r[i++],h=r[i++],g=1===r[i++],C=r[i];return t.defined(o)?(o._positions=s,o._ellipsoid=a.Ellipsoid.clone(d,o._ellipsoid),o._vertexFormat=p.VertexFormat.clone(u,o._vertexFormat),o._width=m,o._height=f,o._extrudedHeight=y,o._cornerType=c,o._granularity=h,o._shadowVolume=g,o._offsetAttribute=-1===C?void 0:C,o):(K.positions=s,K.width=m,K.height=f,K.extrudedHeight=y,K.cornerType=c,K.granularity=h,K.shadowVolume=g,K.offsetAttribute=-1===C?void 0:C,new q(K))},q.computeRectangle=function(r,i){var o=(r=t.defaultValue(r,t.defaultValue.EMPTY_OBJECT)).positions,n=r.width;return e.Check.defined("options.positions",o),e.Check.defined("options.width",n),W(o,t.defaultValue(r.ellipsoid,a.Ellipsoid.WGS84),n,t.defaultValue(r.cornerType,v.CornerType.ROUNDED),i)},q.createGeometry=function(e){var o=e._positions,n=e._width,s=e._ellipsoid;o=N(o,s);var u=h.arrayRemoveDuplicates(o,a.Cartesian3.equalsEpsilon);if(!(u.length<2||n<=0)){var m,f=e._height,y=e._extrudedHeight,p=!r.CesiumMath.equalsEpsilon(f,y,0,r.CesiumMath.EPSILON2),g=e._vertexFormat,C={ellipsoid:s,positions:u,width:n,cornerType:e._cornerType,granularity:e._granularity,saveAttributes:!0};if(p)C.height=f,C.extrudedHeight=y,C.shadowVolume=e._shadowVolume,C.offsetAttribute=e._offsetAttribute,m=I(C,g);else if((m=M(w.CorridorGeometryLibrary.computePositions(C),g,s)).attributes.position.values=b.PolygonPipeline.scaleToGeodeticHeight(m.attributes.position.values,f,s),t.defined(e._offsetAttribute)){var v=e._offsetAttribute===c.GeometryOffsetAttribute.NONE?0:1,A=m.attributes.position.values.length,_=new Uint8Array(A/3);c.arrayFill(_,v),m.attributes.applyOffset=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:_})}var T=m.attributes,G=i.BoundingSphere.fromVertices(T.position.values,void 0,3);return g.position||(m.attributes.position.values=void 0),new d.Geometry({attributes:T,indices:m.indices,primitiveType:d.PrimitiveType.TRIANGLES,boundingSphere:G,offsetAttribute:e._offsetAttribute})}},q.createShadowVolume=function(t,e,r){var a=t._granularity,i=t._ellipsoid,o=e(a,i),n=r(a,i);return new q({positions:t._positions,width:t._width,cornerType:t._cornerType,ellipsoid:i,granularity:a,extrudedHeight:o,height:n,vertexFormat:p.VertexFormat.POSITION_ONLY,shadowVolume:!0})},Object.defineProperties(q.prototype,{rectangle:{get:function(){return t.defined(this._rectangle)||(this._rectangle=W(this._positions,this._ellipsoid,this._width,this._cornerType)),this._rectangle}},textureCoordinateRotationPoints:{get:function(){return[0,0,0,1,1,0]}}}),function(e,r){return t.defined(r)&&(e=q.unpack(e,r)),e._ellipsoid=a.Ellipsoid.clone(e._ellipsoid),q.createGeometry(e)}}));
//# sourceMappingURL=createCorridorGeometry.js.map
