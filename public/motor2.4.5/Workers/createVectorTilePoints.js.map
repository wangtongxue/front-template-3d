{"version":3,"file":"createVectorTilePoints.js","sources":["../../../../Source/WorkersES6/createVectorTilePoints.js"],"sourcesContent":["import AttributeCompression from '../Core/AttributeCompression.js';\r\nimport Cartesian3 from '../Core/Cartesian3.js';\r\nimport Cartographic from '../Core/Cartographic.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\nimport CesiumMath from '../Core/Math.js';\r\nimport Rectangle from '../Core/Rectangle.js';\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\n\r\n    var maxShort = 32767;\r\n\r\n    var scratchBVCartographic = new Cartographic();\r\n    var scratchEncodedPosition = new Cartesian3();\r\n\r\n    var scratchRectangle = new Rectangle();\r\n    var scratchEllipsoid = new Ellipsoid();\r\n    var scratchMinMaxHeights = {\r\n        min : undefined,\r\n        max : undefined\r\n    };\r\n\r\n    function unpackBuffer(packedBuffer) {\r\n        packedBuffer = new Float64Array(packedBuffer);\r\n\r\n        var offset = 0;\r\n        scratchMinMaxHeights.min = packedBuffer[offset++];\r\n        scratchMinMaxHeights.max = packedBuffer[offset++];\r\n\r\n        Rectangle.unpack(packedBuffer, offset, scratchRectangle);\r\n        offset += Rectangle.packedLength;\r\n\r\n        Ellipsoid.unpack(packedBuffer, offset, scratchEllipsoid);\r\n    }\r\n\r\n    function createVectorTilePoints(parameters, transferableObjects) {\r\n        var positions = new Uint16Array(parameters.positions);\r\n\r\n        unpackBuffer(parameters.packedBuffer);\r\n        var rectangle = scratchRectangle;\r\n        var ellipsoid = scratchEllipsoid;\r\n        var minimumHeight = scratchMinMaxHeights.min;\r\n        var maximumHeight = scratchMinMaxHeights.max;\r\n\r\n        var positionsLength = positions.length / 3;\r\n        var uBuffer = positions.subarray(0, positionsLength);\r\n        var vBuffer = positions.subarray(positionsLength, 2 * positionsLength);\r\n        var heightBuffer = positions.subarray(2 * positionsLength, 3 * positionsLength);\r\n        AttributeCompression.zigZagDeltaDecode(uBuffer, vBuffer, heightBuffer);\r\n\r\n        var decoded = new Float64Array(positions.length);\r\n        for (var i = 0; i < positionsLength; ++i) {\r\n            var u = uBuffer[i];\r\n            var v = vBuffer[i];\r\n            var h = heightBuffer[i];\r\n\r\n            var lon = CesiumMath.lerp(rectangle.west, rectangle.east, u / maxShort);\r\n            var lat = CesiumMath.lerp(rectangle.south, rectangle.north, v / maxShort);\r\n            var alt = CesiumMath.lerp(minimumHeight, maximumHeight, h / maxShort);\r\n\r\n            var cartographic = Cartographic.fromRadians(lon, lat, alt, scratchBVCartographic);\r\n            var decodedPosition = ellipsoid.cartographicToCartesian(cartographic, scratchEncodedPosition);\r\n            Cartesian3.pack(decodedPosition, decoded, i * 3);\r\n        }\r\n\r\n        transferableObjects.push(decoded.buffer);\r\n\r\n        return {\r\n            positions : decoded.buffer\r\n        };\r\n    }\r\nexport default createTaskProcessorWorker(createVectorTilePoints);\r\n"],"names":["scratchBVCartographic","Cartographic","scratchEncodedPosition","Cartesian3","scratchRectangle","Rectangle","scratchEllipsoid","Ellipsoid","scratchMinMaxHeights","min","undefined","max","createTaskProcessorWorker","parameters","transferableObjects","positions","Uint16Array","packedBuffer","Float64Array","offset","unpack","packedLength","unpackBuffer","rectangle","ellipsoid","minimumHeight","maximumHeight","positionsLength","length","uBuffer","subarray","vBuffer","heightBuffer","AttributeCompression","zigZagDeltaDecode","decoded","i","u","v","h","lon","CesiumMath","lerp","west","east","lat","south","north","alt","cartographic","fromRadians","decodedPosition","cartographicToCartesian","pack","push","buffer"],"mappings":"qNAQI,IAEIA,EAAwB,IAAIC,eAC5BC,EAAyB,IAAIC,aAE7BC,EAAmB,IAAIC,YACvBC,EAAmB,IAAIC,YACvBC,EAAuB,CACvBC,SAAMC,EACNC,SAAMD,UAoDCE,GApCX,SAAgCC,EAAYC,GACxC,IAAIC,EAAY,IAAIC,YAAYH,EAAWE,YAd/C,SAAsBE,GAClBA,EAAe,IAAIC,aAAaD,GAEhC,IAAIE,EAAS,EACbX,EAAqBC,IAAMQ,EAAaE,KACxCX,EAAqBG,IAAMM,EAAaE,KAExCd,YAAUe,OAAOH,EAAcE,EAAQf,GACvCe,GAAUd,YAAUgB,aAEpBd,YAAUa,OAAOH,EAAcE,EAAQb,GAMvCgB,CAAaT,EAAWI,cACxB,IAAIM,EAAYnB,EACZoB,EAAYlB,EACZmB,EAAgBjB,EAAqBC,IACrCiB,EAAgBlB,EAAqBG,IAErCgB,EAAkBZ,EAAUa,OAAS,EACrCC,EAAUd,EAAUe,SAAS,EAAGH,GAChCI,EAAUhB,EAAUe,SAASH,EAAiB,EAAIA,GAClDK,EAAejB,EAAUe,SAAS,EAAIH,EAAiB,EAAIA,GAC/DM,uBAAqBC,kBAAkBL,EAASE,EAASC,GAGzD,IADA,IAAIG,EAAU,IAAIjB,aAAaH,EAAUa,QAChCQ,EAAI,EAAGA,EAAIT,IAAmBS,EAAG,CACtC,IAAIC,EAAIR,EAAQO,GACZE,EAAIP,EAAQK,GACZG,EAAIP,EAAaI,GAEjBI,EAAMC,aAAWC,KAAKnB,EAAUoB,KAAMpB,EAAUqB,KAAMP,EA9CnD,OA+CHQ,EAAMJ,aAAWC,KAAKnB,EAAUuB,MAAOvB,EAAUwB,MAAOT,EA/CrD,OAgDHU,EAAMP,aAAWC,KAAKjB,EAAeC,EAAea,EAhDjD,OAkDHU,EAAehD,eAAaiD,YAAYV,EAAKK,EAAKG,EAAKhD,GACvDmD,EAAkB3B,EAAU4B,wBAAwBH,EAAc/C,GACtEC,aAAWkD,KAAKF,EAAiBhB,EAAa,EAAJC,GAK9C,OAFAtB,EAAoBwC,KAAKnB,EAAQoB,QAE1B,CACHxC,UAAYoB,EAAQoB"}