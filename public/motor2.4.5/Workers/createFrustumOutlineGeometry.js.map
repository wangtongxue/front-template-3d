{"version":3,"file":"createFrustumOutlineGeometry.js","sources":["../../../../Source/Core/FrustumOutlineGeometry.js","../../../../Source/WorkersES6/createFrustumOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport FrustumGeometry from './FrustumGeometry.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport OrthographicFrustum from './OrthographicFrustum.js';\r\nimport PerspectiveFrustum from './PerspectiveFrustum.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\nimport Quaternion from './Quaternion.js';\r\n\r\n    var PERSPECTIVE = 0;\r\n    var ORTHOGRAPHIC = 1;\r\n\r\n    /**\r\n     * A description of the outline of a frustum with the given the origin and orientation.\r\n     *\r\n     * @alias FrustumOutlineGeometry\r\n     * @constructor\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {PerspectiveFrustum|OrthographicFrustum} options.frustum The frustum.\r\n     * @param {Cartesian3} options.origin The origin of the frustum.\r\n     * @param {Quaternion} options.orientation The orientation of the frustum.\r\n     */\r\n    function FrustumOutlineGeometry(options) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('options', options);\r\n        Check.typeOf.object('options.frustum', options.frustum);\r\n        Check.typeOf.object('options.origin', options.origin);\r\n        Check.typeOf.object('options.orientation', options.orientation);\r\n        //>>includeEnd('debug');\r\n\r\n        var frustum = options.frustum;\r\n        var orientation = options.orientation;\r\n        var origin = options.origin;\r\n\r\n        // This is private because it is used by DebugCameraPrimitive to draw a multi-frustum by\r\n        // creating multiple FrustumOutlineGeometrys. This way the near plane of one frustum doesn't overlap\r\n        // the far plane of another.\r\n        var drawNearPlane = defaultValue(options._drawNearPlane, true);\r\n\r\n        var frustumType;\r\n        var frustumPackedLength;\r\n        if (frustum instanceof PerspectiveFrustum) {\r\n            frustumType = PERSPECTIVE;\r\n            frustumPackedLength = PerspectiveFrustum.packedLength;\r\n        } else if (frustum instanceof OrthographicFrustum) {\r\n            frustumType = ORTHOGRAPHIC;\r\n            frustumPackedLength = OrthographicFrustum.packedLength;\r\n        }\r\n\r\n        this._frustumType = frustumType;\r\n        this._frustum = frustum.clone();\r\n        this._origin = Cartesian3.clone(origin);\r\n        this._orientation = Quaternion.clone(orientation);\r\n        this._drawNearPlane = drawNearPlane;\r\n        this._workerName = 'createFrustumOutlineGeometry';\r\n\r\n        /**\r\n         * The number of elements used to pack the object into an array.\r\n         * @type {Number}\r\n         */\r\n        this.packedLength = 2 + frustumPackedLength + Cartesian3.packedLength + Quaternion.packedLength;\r\n    }\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {FrustumOutlineGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    FrustumOutlineGeometry.pack = function(value, array, startingIndex) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        var frustumType = value._frustumType;\r\n        var frustum = value._frustum;\r\n\r\n        array[startingIndex++] = frustumType;\r\n\r\n        if (frustumType === PERSPECTIVE) {\r\n            PerspectiveFrustum.pack(frustum, array, startingIndex);\r\n            startingIndex += PerspectiveFrustum.packedLength;\r\n        } else {\r\n            OrthographicFrustum.pack(frustum, array, startingIndex);\r\n            startingIndex += OrthographicFrustum.packedLength;\r\n        }\r\n\r\n        Cartesian3.pack(value._origin, array, startingIndex);\r\n        startingIndex += Cartesian3.packedLength;\r\n        Quaternion.pack(value._orientation, array, startingIndex);\r\n        startingIndex += Quaternion.packedLength;\r\n        array[startingIndex] = value._drawNearPlane ? 1.0 : 0.0;\r\n\r\n        return array;\r\n    };\r\n\r\n    var scratchPackPerspective = new PerspectiveFrustum();\r\n    var scratchPackOrthographic = new OrthographicFrustum();\r\n    var scratchPackQuaternion = new Quaternion();\r\n    var scratchPackorigin = new Cartesian3();\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {FrustumOutlineGeometry} [result] The object into which to store the result.\r\n     */\r\n    FrustumOutlineGeometry.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        var frustumType = array[startingIndex++];\r\n\r\n        var frustum;\r\n        if (frustumType === PERSPECTIVE) {\r\n            frustum = PerspectiveFrustum.unpack(array, startingIndex, scratchPackPerspective);\r\n            startingIndex += PerspectiveFrustum.packedLength;\r\n        } else {\r\n            frustum = OrthographicFrustum.unpack(array, startingIndex, scratchPackOrthographic);\r\n            startingIndex += OrthographicFrustum.packedLength;\r\n        }\r\n\r\n        var origin = Cartesian3.unpack(array, startingIndex, scratchPackorigin);\r\n        startingIndex += Cartesian3.packedLength;\r\n        var orientation = Quaternion.unpack(array, startingIndex, scratchPackQuaternion);\r\n        startingIndex += Quaternion.packedLength;\r\n        var drawNearPlane = array[startingIndex] === 1.0;\r\n\r\n        if (!defined(result)) {\r\n            return new FrustumOutlineGeometry({\r\n                frustum : frustum,\r\n                origin : origin,\r\n                orientation : orientation,\r\n                _drawNearPlane : drawNearPlane\r\n            });\r\n        }\r\n\r\n        var frustumResult = frustumType === result._frustumType ? result._frustum : undefined;\r\n        result._frustum = frustum.clone(frustumResult);\r\n\r\n        result._frustumType = frustumType;\r\n        result._origin = Cartesian3.clone(origin, result._origin);\r\n        result._orientation = Quaternion.clone(orientation, result._orientation);\r\n        result._drawNearPlane = drawNearPlane;\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the geometric representation of a frustum outline, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @param {FrustumOutlineGeometry} frustumGeometry A description of the frustum.\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    FrustumOutlineGeometry.createGeometry = function(frustumGeometry) {\r\n        var frustumType = frustumGeometry._frustumType;\r\n        var frustum = frustumGeometry._frustum;\r\n        var origin = frustumGeometry._origin;\r\n        var orientation = frustumGeometry._orientation;\r\n        var drawNearPlane = frustumGeometry._drawNearPlane;\r\n\r\n        var positions = new Float64Array(3 * 4 * 2);\r\n        FrustumGeometry._computeNearFarPlanes(origin, orientation, frustumType, frustum, positions);\r\n\r\n        var attributes = new GeometryAttributes({\r\n            position : new GeometryAttribute({\r\n                componentDatatype : ComponentDatatype.DOUBLE,\r\n                componentsPerAttribute : 3,\r\n                values : positions\r\n            })\r\n        });\r\n\r\n        var offset;\r\n        var index;\r\n\r\n        var numberOfPlanes = drawNearPlane ? 2 : 1;\r\n        var indices = new Uint16Array(8 * (numberOfPlanes + 1));\r\n\r\n        // Build the near/far planes\r\n        var i = drawNearPlane ? 0 : 1;\r\n        for (; i < 2; ++i) {\r\n            offset = drawNearPlane ? i * 8 : 0;\r\n            index = i * 4;\r\n\r\n            indices[offset] = index;\r\n            indices[offset + 1] = index + 1;\r\n            indices[offset + 2] = index + 1;\r\n            indices[offset + 3] = index + 2;\r\n            indices[offset + 4] = index + 2;\r\n            indices[offset + 5] = index + 3;\r\n            indices[offset + 6] = index + 3;\r\n            indices[offset + 7] = index;\r\n        }\r\n\r\n        // Build the sides of the frustums\r\n        for (i = 0; i < 2; ++i) {\r\n            offset = (numberOfPlanes + i) * 8;\r\n            index = i * 4;\r\n\r\n            indices[offset] = index;\r\n            indices[offset + 1] = index + 4;\r\n            indices[offset + 2] = index + 1;\r\n            indices[offset + 3] = index + 5;\r\n            indices[offset + 4] = index + 2;\r\n            indices[offset + 5] = index + 6;\r\n            indices[offset + 6] = index + 3;\r\n            indices[offset + 7] = index + 7;\r\n        }\r\n\r\n        return new Geometry({\r\n            attributes : attributes,\r\n            indices : indices,\r\n            primitiveType : PrimitiveType.LINES,\r\n            boundingSphere : BoundingSphere.fromVertices(positions)\r\n        });\r\n    };\r\nexport default FrustumOutlineGeometry;\r\n","import defined from '../Core/defined.js';\r\nimport FrustumOutlineGeometry from '../Core/FrustumOutlineGeometry.js';\r\n\r\n    function createFrustumOutlineGeometry(frustumGeometry, offset) {\r\n        if (defined(offset)) {\r\n            frustumGeometry = FrustumOutlineGeometry.unpack(frustumGeometry, offset);\r\n        }\r\n        return FrustumOutlineGeometry.createGeometry(frustumGeometry);\r\n    }\r\nexport default createFrustumOutlineGeometry;\r\n"],"names":["FrustumOutlineGeometry","options","Check","typeOf","object","frustum","origin","orientation","frustumType","frustumPackedLength","drawNearPlane","defaultValue","_drawNearPlane","PerspectiveFrustum","packedLength","OrthographicFrustum","this","_frustumType","_frustum","clone","_origin","Cartesian3","_orientation","Quaternion","_workerName","pack","value","array","startingIndex","defined","scratchPackPerspective","scratchPackOrthographic","scratchPackQuaternion","scratchPackorigin","unpack","result","frustumResult","undefined","createGeometry","frustumGeometry","positions","Float64Array","FrustumGeometry","_computeNearFarPlanes","offset","index","attributes","GeometryAttributes","position","GeometryAttribute","componentDatatype","ComponentDatatype","DOUBLE","componentsPerAttribute","values","numberOfPlanes","indices","Uint16Array","i","Geometry","primitiveType","PrimitiveType","LINES","boundingSphere","BoundingSphere","fromVertices"],"mappings":"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"}