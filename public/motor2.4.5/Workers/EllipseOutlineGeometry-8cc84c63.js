/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["exports","./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./ComponentDatatype-329b9462","./GeometryAttribute-b8faa946","./GeometryAttributes-614c63f8","./IndexDatatype-153fdd7f","./arrayFill-11a46844","./EllipseGeometryLibrary-81b498b5"],(function(e,t,i,r,a,n,o,s,l,u,d,p,f){"use strict";var m=new a.Cartesian3,c=new a.Cartesian3;var h=new o.BoundingSphere,y=new o.BoundingSphere;function b(e){var o=(e=t.defaultValue(e,t.defaultValue.EMPTY_OBJECT)).center,s=t.defaultValue(e.ellipsoid,n.Ellipsoid.WGS84),l=e.semiMajorAxis,u=e.semiMinorAxis,d=t.defaultValue(e.granularity,r.CesiumMath.RADIANS_PER_DEGREE);if(!t.defined(o))throw new i.DeveloperError("center is required.");if(!t.defined(l))throw new i.DeveloperError("semiMajorAxis is required.");if(!t.defined(u))throw new i.DeveloperError("semiMinorAxis is required.");if(l<u)throw new i.DeveloperError("semiMajorAxis must be greater than or equal to the semiMinorAxis.");if(d<=0)throw new i.DeveloperError("granularity must be greater than zero.");var p=t.defaultValue(e.height,0),f=t.defaultValue(e.extrudedHeight,p);this._center=a.Cartesian3.clone(o),this._semiMajorAxis=l,this._semiMinorAxis=u,this._ellipsoid=n.Ellipsoid.clone(s),this._rotation=t.defaultValue(e.rotation,0),this._height=Math.max(f,p),this._granularity=d,this._extrudedHeight=Math.min(f,p),this._numberOfVerticalLines=Math.max(t.defaultValue(e.numberOfVerticalLines,16),0),this._offsetAttribute=e.offsetAttribute,this._workerName="createEllipseOutlineGeometry"}b.packedLength=a.Cartesian3.packedLength+n.Ellipsoid.packedLength+8,b.pack=function(e,r,o){if(!t.defined(e))throw new i.DeveloperError("value is required");if(!t.defined(r))throw new i.DeveloperError("array is required");return o=t.defaultValue(o,0),a.Cartesian3.pack(e._center,r,o),o+=a.Cartesian3.packedLength,n.Ellipsoid.pack(e._ellipsoid,r,o),o+=n.Ellipsoid.packedLength,r[o++]=e._semiMajorAxis,r[o++]=e._semiMinorAxis,r[o++]=e._rotation,r[o++]=e._height,r[o++]=e._granularity,r[o++]=e._extrudedHeight,r[o++]=e._numberOfVerticalLines,r[o]=t.defaultValue(e._offsetAttribute,-1),r};var A=new a.Cartesian3,_=new n.Ellipsoid,g={center:A,ellipsoid:_,semiMajorAxis:void 0,semiMinorAxis:void 0,rotation:void 0,height:void 0,granularity:void 0,extrudedHeight:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0};b.unpack=function(e,r,o){if(!t.defined(e))throw new i.DeveloperError("array is required");r=t.defaultValue(r,0);var s=a.Cartesian3.unpack(e,r,A);r+=a.Cartesian3.packedLength;var l=n.Ellipsoid.unpack(e,r,_);r+=n.Ellipsoid.packedLength;var u=e[r++],d=e[r++],p=e[r++],f=e[r++],m=e[r++],c=e[r++],h=e[r++],y=e[r];return t.defined(o)?(o._center=a.Cartesian3.clone(s,o._center),o._ellipsoid=n.Ellipsoid.clone(l,o._ellipsoid),o._semiMajorAxis=u,o._semiMinorAxis=d,o._rotation=p,o._height=f,o._granularity=m,o._extrudedHeight=c,o._numberOfVerticalLines=h,o._offsetAttribute=-1===y?void 0:y,o):(g.height=f,g.extrudedHeight=c,g.granularity=m,g.rotation=p,g.semiMajorAxis=u,g.semiMinorAxis=d,g.numberOfVerticalLines=h,g.offsetAttribute=-1===y?void 0:y,new b(g))},b.createGeometry=function(e){if(!(e._semiMajorAxis<=0||e._semiMinorAxis<=0)){var i=e._height,n=e._extrudedHeight,b=!r.CesiumMath.equalsEpsilon(i,n,0,r.CesiumMath.EPSILON2);e._center=e._ellipsoid.scaleToGeodeticSurface(e._center,e._center);var A,_={center:e._center,semiMajorAxis:e._semiMajorAxis,semiMinorAxis:e._semiMinorAxis,ellipsoid:e._ellipsoid,rotation:e._rotation,height:i,granularity:e._granularity,numberOfVerticalLines:e._numberOfVerticalLines};if(b)_.extrudedHeight=n,_.offsetAttribute=e._offsetAttribute,A=function(e){var i=e.center,n=e.ellipsoid,c=e.semiMajorAxis,b=a.Cartesian3.multiplyByScalar(n.geodeticSurfaceNormal(i,m),e.height,m);h.center=a.Cartesian3.add(i,b,h.center),h.radius=c,b=a.Cartesian3.multiplyByScalar(n.geodeticSurfaceNormal(i,b),e.extrudedHeight,b),y.center=a.Cartesian3.add(i,b,y.center),y.radius=c;var A=f.EllipseGeometryLibrary.computeEllipsePositions(e,!1,!0).outerPositions,_=new u.GeometryAttributes({position:new l.GeometryAttribute({componentDatatype:s.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:f.EllipseGeometryLibrary.raisePositionsToHeight(A,e,!0)})});A=_.position.values;var g=o.BoundingSphere.union(h,y),v=A.length/3;if(t.defined(e.offsetAttribute)){var E=new Uint8Array(v);if(e.offsetAttribute===l.GeometryOffsetAttribute.TOP)E=p.arrayFill(E,1,0,v/2);else{var x=e.offsetAttribute===l.GeometryOffsetAttribute.NONE?0:1;E=p.arrayFill(E,x)}_.applyOffset=new l.GeometryAttribute({componentDatatype:s.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:E})}var w=t.defaultValue(e.numberOfVerticalLines,16);w=r.CesiumMath.clamp(w,0,v/2);var M=d.IndexDatatype.createTypedArray(v,2*v+2*w);v/=2;var C,D,G=0;for(C=0;C<v;++C)M[G++]=C,M[G++]=(C+1)%v,M[G++]=C+v,M[G++]=(C+1)%v+v;if(w>0){var L=Math.min(w,v);D=Math.round(v/L);var O=Math.min(D*w,v);for(C=0;C<O;C+=D)M[G++]=C,M[G++]=C+v}return{boundingSphere:g,attributes:_,indices:M}}(_);else if(A=function(e){var t=e.center;c=a.Cartesian3.multiplyByScalar(e.ellipsoid.geodeticSurfaceNormal(t,c),e.height,c),c=a.Cartesian3.add(t,c,c);for(var i=new o.BoundingSphere(c,e.semiMajorAxis),r=f.EllipseGeometryLibrary.computeEllipsePositions(e,!1,!0).outerPositions,n=new u.GeometryAttributes({position:new l.GeometryAttribute({componentDatatype:s.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:f.EllipseGeometryLibrary.raisePositionsToHeight(r,e,!1)})}),p=r.length/3,m=d.IndexDatatype.createTypedArray(p,2*p),h=0,y=0;y<p;++y)m[h++]=y,m[h++]=(y+1)%p;return{boundingSphere:i,attributes:n,indices:m}}(_),t.defined(e._offsetAttribute)){var g=A.attributes.position.values.length,v=new Uint8Array(g/3),E=e._offsetAttribute===l.GeometryOffsetAttribute.NONE?0:1;p.arrayFill(v,E),A.attributes.applyOffset=new l.GeometryAttribute({componentDatatype:s.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:v})}return new l.Geometry({attributes:A.attributes,indices:A.indices,primitiveType:l.PrimitiveType.LINES,boundingSphere:A.boundingSphere,offsetAttribute:e._offsetAttribute})}},e.EllipseOutlineGeometry=b}));
