{"version":3,"file":"CoplanarPolygonGeometryLibrary-a25e2653.js","sources":["../../../../Source/Core/CoplanarPolygonGeometryLibrary.js"],"sourcesContent":["import Cartesian2 from './Cartesian2.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport Matrix3 from './Matrix3.js';\r\nimport OrientedBoundingBox from './OrientedBoundingBox.js';\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    var CoplanarPolygonGeometryLibrary = {};\r\n\r\n    var scratchIntersectionPoint = new Cartesian3();\r\n    var scratchXAxis = new Cartesian3();\r\n    var scratchYAxis = new Cartesian3();\r\n    var scratchZAxis = new Cartesian3();\r\n    var obbScratch = new OrientedBoundingBox();\r\n\r\n    CoplanarPolygonGeometryLibrary.validOutline = function(positions) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('positions', positions);\r\n        //>>includeEnd('debug');\r\n\r\n        var orientedBoundingBox = OrientedBoundingBox.fromPoints(positions, obbScratch);\r\n        var halfAxes = orientedBoundingBox.halfAxes;\r\n        var xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\r\n        var yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\r\n        var zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\r\n\r\n        var xMag = Cartesian3.magnitude(xAxis);\r\n        var yMag = Cartesian3.magnitude(yAxis);\r\n        var zMag = Cartesian3.magnitude(zAxis);\r\n\r\n        // If all the points are on a line return undefined because we can't draw a polygon\r\n        return !((xMag === 0 && (yMag === 0 || zMag === 0)) || (yMag === 0 && zMag === 0));\r\n    };\r\n\r\n    // call after removeDuplicates\r\n    CoplanarPolygonGeometryLibrary.computeProjectTo2DArguments = function(positions, centerResult, planeAxis1Result, planeAxis2Result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('positions', positions);\r\n        Check.defined('centerResult', centerResult);\r\n        Check.defined('planeAxis1Result', planeAxis1Result);\r\n        Check.defined('planeAxis2Result', planeAxis2Result);\r\n        //>>includeEnd('debug');\r\n\r\n        var orientedBoundingBox = OrientedBoundingBox.fromPoints(positions, obbScratch);\r\n        var halfAxes = orientedBoundingBox.halfAxes;\r\n        var xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\r\n        var yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\r\n        var zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\r\n\r\n        var xMag = Cartesian3.magnitude(xAxis);\r\n        var yMag = Cartesian3.magnitude(yAxis);\r\n        var zMag = Cartesian3.magnitude(zAxis);\r\n        var min = Math.min(xMag, yMag, zMag);\r\n\r\n        // If all the points are on a line return undefined because we can't draw a polygon\r\n        if ((xMag === 0 && (yMag === 0 || zMag === 0)) || (yMag === 0 && zMag === 0)) {\r\n            return false;\r\n        }\r\n\r\n        var planeAxis1;\r\n        var planeAxis2;\r\n\r\n        if (min === yMag || min === zMag) {\r\n            planeAxis1 = xAxis;\r\n        }\r\n        if (min === xMag) {\r\n            planeAxis1 = yAxis;\r\n        } else if (min === zMag) {\r\n            planeAxis2 = yAxis;\r\n        }\r\n        if (min === xMag || min === yMag) {\r\n            planeAxis2 = zAxis;\r\n        }\r\n\r\n        Cartesian3.normalize(planeAxis1, planeAxis1Result);\r\n        Cartesian3.normalize(planeAxis2, planeAxis2Result);\r\n        Cartesian3.clone(orientedBoundingBox.center, centerResult);\r\n        return true;\r\n    };\r\n\r\n    function projectTo2D(position, center, axis1, axis2, result) {\r\n        var v = Cartesian3.subtract(position, center, scratchIntersectionPoint);\r\n        var x = Cartesian3.dot(axis1, v);\r\n        var y = Cartesian3.dot(axis2, v);\r\n\r\n        return Cartesian2.fromElements(x, y, result);\r\n    }\r\n\r\n    CoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction = function(center, axis1, axis2) {\r\n        return function(positions) {\r\n            var positionResults = new Array(positions.length);\r\n            for (var i = 0; i < positions.length; i++) {\r\n                positionResults[i] = projectTo2D(positions[i], center, axis1, axis2);\r\n            }\r\n\r\n            return positionResults;\r\n        };\r\n    };\r\n\r\n    CoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction = function(center, axis1, axis2) {\r\n        return function(position, result) {\r\n            return projectTo2D(position, center, axis1, axis2, result);\r\n        };\r\n    };\r\nexport default CoplanarPolygonGeometryLibrary;\r\n"],"names":["CoplanarPolygonGeometryLibrary","scratchIntersectionPoint","Cartesian3","scratchXAxis","scratchYAxis","scratchZAxis","obbScratch","OrientedBoundingBox","projectTo2D","position","center","axis1","axis2","result","v","subtract","x","dot","y","Cartesian2","fromElements","validOutline","positions","Check","defined","halfAxes","fromPoints","xAxis","Matrix3","getColumn","yAxis","zAxis","xMag","magnitude","yMag","zMag","computeProjectTo2DArguments","centerResult","planeAxis1Result","planeAxis2Result","planeAxis1","planeAxis2","orientedBoundingBox","min","Math","normalize","clone","createProjectPointsTo2DFunction","positionResults","Array","length","i","createProjectPointTo2DFunction"],"mappings":"kLASI,IAAIA,EAAiC,GAEjCC,EAA2B,IAAIC,aAC/BC,EAAe,IAAID,aACnBE,EAAe,IAAIF,aACnBG,EAAe,IAAIH,aACnBI,EAAa,IAAIC,sBAmErB,SAASC,EAAYC,EAAUC,EAAQC,EAAOC,EAAOC,GACjD,IAAIC,EAAIZ,aAAWa,SAASN,EAAUC,EAAQT,GAC1Ce,EAAId,aAAWe,IAAIN,EAAOG,GAC1BI,EAAIhB,aAAWe,IAAIL,EAAOE,GAE9B,OAAOK,aAAWC,aAAaJ,EAAGE,EAAGL,GAtEzCb,EAA+BqB,aAAe,SAASC,GAEnDC,QAAMC,QAAQ,YAAaF,GAG3B,IACIG,EADsBlB,sBAAoBmB,WAAWJ,EAAWhB,GACjCmB,SAC/BE,EAAQC,UAAQC,UAAUJ,EAAU,EAAGtB,GACvC2B,EAAQF,UAAQC,UAAUJ,EAAU,EAAGrB,GACvC2B,EAAQH,UAAQC,UAAUJ,EAAU,EAAGpB,GAEvC2B,EAAO9B,aAAW+B,UAAUN,GAC5BO,EAAOhC,aAAW+B,UAAUH,GAC5BK,EAAOjC,aAAW+B,UAAUF,GAGhC,QAAmB,IAATC,IAAwB,IAATE,GAAuB,IAATC,IAA0B,IAATD,GAAuB,IAATC,IAI1EnC,EAA+BoC,4BAA8B,SAASd,EAAWe,EAAcC,EAAkBC,GAE7GhB,QAAMC,QAAQ,YAAaF,GAC3BC,QAAMC,QAAQ,eAAgBa,GAC9Bd,QAAMC,QAAQ,mBAAoBc,GAClCf,QAAMC,QAAQ,mBAAoBe,GAGlC,IAgBIC,EACAC,EAjBAC,EAAsBnC,sBAAoBmB,WAAWJ,EAAWhB,GAChEmB,EAAWiB,EAAoBjB,SAC/BE,EAAQC,UAAQC,UAAUJ,EAAU,EAAGtB,GACvC2B,EAAQF,UAAQC,UAAUJ,EAAU,EAAGrB,GACvC2B,EAAQH,UAAQC,UAAUJ,EAAU,EAAGpB,GAEvC2B,EAAO9B,aAAW+B,UAAUN,GAC5BO,EAAOhC,aAAW+B,UAAUH,GAC5BK,EAAOjC,aAAW+B,UAAUF,GAC5BY,EAAMC,KAAKD,IAAIX,EAAME,EAAMC,GAG/B,OAAc,IAATH,GAAwB,IAATE,GAAuB,IAATC,KAA0B,IAATD,GAAuB,IAATC,KAO7DQ,IAAQT,GAAQS,IAAQR,IACxBK,EAAab,GAEbgB,IAAQX,EACRQ,EAAaV,EACNa,IAAQR,IACfM,EAAaX,GAEba,IAAQX,GAAQW,IAAQT,IACxBO,EAAaV,GAGjB7B,aAAW2C,UAAUL,EAAYF,GACjCpC,aAAW2C,UAAUJ,EAAYF,GACjCrC,aAAW4C,MAAMJ,EAAoBhC,OAAQ2B,IACtC,IAWXrC,EAA+B+C,gCAAkC,SAASrC,EAAQC,EAAOC,GACrF,OAAO,SAASU,GAEZ,IADA,IAAI0B,EAAkB,IAAIC,MAAM3B,EAAU4B,QACjCC,EAAI,EAAGA,EAAI7B,EAAU4B,OAAQC,IAClCH,EAAgBG,GAAK3C,EAAYc,EAAU6B,GAAIzC,EAAQC,EAAOC,GAGlE,OAAOoC,IAIfhD,EAA+BoD,+BAAiC,SAAS1C,EAAQC,EAAOC,GACpF,OAAO,SAASH,EAAUI,GACtB,OAAOL,EAAYC,EAAUC,EAAQC,EAAOC,EAAOC"}